#include <iostream>
using namespace std;

int d[100001]; //i번째 까지의 수의 합 저장하는 테이블

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin>>n>>m;
    d[0]=0; //초기 계산을 위한 d[0]값
    for(int i=1; i<=n; i++){//테이블 모두 계산
        cin>>d[i];
        d[i]=d[i]+d[i-1];
    }
    for(int i=0; i<m; i++){
        int a,b;
        cin>>a>>b;
        cout<<d[b]-d[a-1]<<'\n';
    }
}

//처음부터 테이블을 모두 채워놓고 나중에 답을 출력하는게 효율적
/*또하나 생각했어야 하는건, 
합을 저장하는 테이블의 자료형으로
###int자료형을 써도 되냐는것### 
다행이 이 문제는 1000이하의 수를 10만번 더하는거라 int범위안에 들어옴.
항상 이런식으로 int범위안에 들어오는지 확인해야함.
*/

//구간합폴더에있는 구간합4 문제랑 동일. 
/*
다만 이전에 제출했던건 44ms 이 코드는 36ms로 이코드가 8ms 빨랐음.
이유는 이전 코드는 지역영역(스택영역)에서 
d[100001]={};을 통해 초기화 작업을 진행했음.
근데 본코드는 그냥 전역변수 영역에서 선언함.
*/

/* 시.공간 복잡도
시간 : o(n+m)
공간 : o(n)
*/